<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>About Singleton on Singleton</title>
    <link>/</link>
    <description>Recent content in About Singleton on Singleton</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Sep 2019 18:41:11 +0800</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Integrate Singleton in Java App</title>
      <link>/docs/tutorials/integrate-singleton-in-java-app/</link>
      <pubDate>Tue, 24 Sep 2019 20:09:42 +0800</pubDate>
      
      <guid>/docs/tutorials/integrate-singleton-in-java-app/</guid>
      <description>Coming soon</description>
    </item>
    
    <item>
      <title>Java Client Introduction</title>
      <link>/docs/overview/singleton-sdk/java-client-introduction/</link>
      <pubDate>Tue, 24 Sep 2019 20:07:51 +0800</pubDate>
      
      <guid>/docs/overview/singleton-sdk/java-client-introduction/</guid>
      <description>As we know in the last article, Singleton provides plenty of APIs to support G11N. However, calling the APIs directly is time-consuming and inefficient. So, Singleton has introduced several Clients for different programming language environments, to encapsulate the API calls to the Service, which significantly improves efficiency, and reduces the cost in development work. These Clients can call the Service&amp;rsquo;s APIs to get the translation and pattern data, then parse the data to provide the translation and data formatting features.</description>
    </item>
    
    <item>
      <title>Enable Source Collection</title>
      <link>/docs/overview/singleton-service/configurations/enable-source-collection/</link>
      <pubDate>Tue, 24 Sep 2019 20:06:35 +0800</pubDate>
      
      <guid>/docs/overview/singleton-service/configurations/enable-source-collection/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Integrate Singleton in Javascript App</title>
      <link>/docs/tutorials/integrate-singleton-in-javascript-app/</link>
      <pubDate>Tue, 24 Sep 2019 20:09:53 +0800</pubDate>
      
      <guid>/docs/tutorials/integrate-singleton-in-javascript-app/</guid>
      <description>Coming soon</description>
    </item>
    
    <item>
      <title>Javascript Client Introduction</title>
      <link>/docs/overview/singleton-sdk/javascript-client-introduction/</link>
      <pubDate>Tue, 24 Sep 2019 20:08:23 +0800</pubDate>
      
      <guid>/docs/overview/singleton-sdk/javascript-client-introduction/</guid>
      <description>The Singleton JavaScript Client is a Singleton Service-based JavaScript library used for SW i18n. It supports all JavaScript frameworks, you can run it in browsers, as well as NodeJS environments. With the Singleton JavaScript Client, it is much easier to use the Web front-end for SW i18n. Now, let&amp;rsquo;s look at what the Client does, and how it is used.
Features Overview  Getting and managing locales. Getting the i18n resources from Singleton Service.</description>
    </item>
    
    <item>
      <title>Enable Pseudo Translation</title>
      <link>/docs/overview/singleton-service/configurations/enable-pseudo-translation/</link>
      <pubDate>Tue, 24 Sep 2019 20:06:48 +0800</pubDate>
      
      <guid>/docs/overview/singleton-service/configurations/enable-pseudo-translation/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Quick Start</title>
      <link>/docs/get-started/quick-start/</link>
      <pubDate>Tue, 24 Sep 2019 20:04:47 +0800</pubDate>
      
      <guid>/docs/get-started/quick-start/</guid>
      <description>The Singleton application suite includes:
 Singleton Service: It contains an Application Program Interface (API), which is a web service that is used for i18n features, such as providing translated text. Singleton Client: It is used to communicate with Singleton Service to get the localized resources.  Features and functionality Singleton offers the following features and functionality:
 Singleton Core API - Provides RESTful web services for delivering localized resources.</description>
    </item>
    
    <item>
      <title>Integrate Singleton in Angular App</title>
      <link>/docs/tutorials/integrate-singleton-in-angular-app/</link>
      <pubDate>Tue, 24 Sep 2019 20:10:10 +0800</pubDate>
      
      <guid>/docs/tutorials/integrate-singleton-in-angular-app/</guid>
      <description>Coming soon</description>
    </item>
    
    <item>
      <title>Angular Client Introduction</title>
      <link>/docs/overview/singleton-sdk/angular-client-introduction/</link>
      <pubDate>Tue, 24 Sep 2019 20:08:31 +0800</pubDate>
      
      <guid>/docs/overview/singleton-sdk/angular-client-introduction/</guid>
      <description>The Singleton Angular Client is a Singleton Service-based library used for SW i18n. Unlike the Singleton JavaScript Client mentioned earlier, the Angular Client is an end-to-end solution that includes specific data loading methods and the Angular-specific template API support. The Singleton Angular Client now supports the Angular 7.x.
Features Overview Getting and managing locales.
Loading i18n resources, including lazy loading mode.
Providing support for the l10n of individual components.</description>
    </item>
    
    <item>
      <title>Integrate Singleton in C# App</title>
      <link>/docs/tutorials/integrate-singleton-in-csharp-app/</link>
      <pubDate>Tue, 24 Sep 2019 20:10:23 +0800</pubDate>
      
      <guid>/docs/tutorials/integrate-singleton-in-csharp-app/</guid>
      <description>Coming soon</description>
    </item>
    
    <item>
      <title>C# Client Introduction</title>
      <link>/docs/overview/singleton-sdk/csharp-client-introduction/</link>
      <pubDate>Tue, 24 Sep 2019 20:08:58 +0800</pubDate>
      
      <guid>/docs/overview/singleton-sdk/csharp-client-introduction/</guid>
      <description>Coming soon</description>
    </item>
    
    <item>
      <title>Integrate Singleton in Python App</title>
      <link>/docs/tutorials/integrate-singleton-in-python-app/</link>
      <pubDate>Tue, 24 Sep 2019 20:10:17 +0800</pubDate>
      
      <guid>/docs/tutorials/integrate-singleton-in-python-app/</guid>
      <description>Coming soon</description>
    </item>
    
    <item>
      <title>Python Client Introduction</title>
      <link>/docs/overview/singleton-sdk/python-client-introduction/</link>
      <pubDate>Tue, 24 Sep 2019 20:08:51 +0800</pubDate>
      
      <guid>/docs/overview/singleton-sdk/python-client-introduction/</guid>
      <description>Coming soon</description>
    </item>
    
    <item>
      <title>Deploy Singleton Service in Your App</title>
      <link>/docs/tutorials/deploy-singleton-service-in-your-app/</link>
      <pubDate>Tue, 24 Sep 2019 20:11:16 +0800</pubDate>
      
      <guid>/docs/tutorials/deploy-singleton-service-in-your-app/</guid>
      <description>Coming soon</description>
    </item>
    
    <item>
      <title>_Footer</title>
      <link>/_footer/</link>
      <pubDate>Thu, 26 Sep 2019 13:43:07 +0800</pubDate>
      
      <guid>/_footer/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Singleton Service APIs</title>
      <link>/docs/overview/singleton-service/singleton-service-apis/</link>
      <pubDate>Tue, 24 Sep 2019 20:05:55 +0800</pubDate>
      
      <guid>/docs/overview/singleton-service/singleton-service-apis/</guid>
      <description>Singleton Service has two API versions available at present: v1 and v2. API v1 was created in the early times of Singleton, while API v2 has been validated with many VMware products over years, which includes the largest number of APIs, and is closer to the Restful style. It is recommended to use API v2 in practice. This version provides two types of APIs:
 Formatting API, which is used to format the data like the date time/number/currency/unit of measure/singular and plural variations, just to name a few.</description>
    </item>
    
  </channel>
</rss>